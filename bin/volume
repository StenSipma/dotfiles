#!/bin/bash
# Script to alter the volume of a sink

CONF_DIR="$HOME/.config/volume"
sink=$(cat $CONF_DIR/selected_sink)


function select-sink {
	pactl list sinks | awk -v sink="#$1" '$2~sink, /^$/ {print}' 
}

function select-sink-description {
	select-sink $1 | awk '/Description:/{for(i=2;i<=NF;i++){printf "%s ", $i}; printf "\n"} ' 
}

#TODO: add some test for correctness of currently selected sink

case $1 in
	show)
		level=$(pactl list sinks | select-sink $sink | awk '/Volume: front-left:/{print $5};' | sed 's/%//')
		printf "%d" "$level"
		;;
	show-muted)
		output=$(pactl list sinks | select-sink $sink | awk '/Mute:/ {print $2}' )
		printf "%s" "$output"
		;;
	show-sink)
		printf "%d" "$sink"
		;;
	show-inputs)
		select-sink-description $sink
		;;
	set-sink)
		sinknumber="$(pactl list sinks short | awk '{print $2; print $1}' | sed 's/bluez_sink.*$/Bluetooth/; s/alsa_output.*$/Laptop/;' | ~/scripts/wrappers/dmenu_wrapper.py)"
		#sinknumbers=$(pactl list sinks short | awk '{print $1}')
		#dmen_input=${sinknumbers//*([:digit:])/}
		printf "%d" "$sinknumber" > $CONF_DIR/selected_sink
		pkill -RTMIN+2 i3blocks
		;;
	up)
		pactl set-sink-volume $sink +5%
		pkill -RTMIN+2 i3blocks
		;;
	down)
		pactl set-sink-volume $sink -5%
		pkill -RTMIN+2 i3blocks
		;;
	mute)
		pactl set-sink-mute $sink toggle
		pkill -RTMIN+2 i3blocks
		;;
	*)
		printf "\n'%s' is not a valid action\n\n" "$1"
		printf "Usage: volume [ACTION]\n"
		printf "  Actions:\n"
		printf "  show     - Displays current sink & volume level\n"
		printf "  up       - Increases volume of selected sink by 5 percent\n"
		printf "  down     - Decreases volume of selected sink by 5 percent\n"
		printf "  mute     - Toggles mute on the selected sink\n"
		printf "  set-sink - Select the sink to be controlled, using Rofi\n"
		printf "\n"
esac
